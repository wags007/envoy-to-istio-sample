admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8081
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          # enable access logging to stdout
          access_log:
          - name: envoy.access_loggers.file
            typedConfig:
              '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
          stat_prefix: vm
          route_config:
            name: local_route
            virtual_hosts:
            - name: routes
              domains:
              - "*"
              routes:
                # Route /frontend http requests to frontend cluster
              - match:
                  prefix: "/frontend"
                route:
                  cluster: frontend

  clusters:
#---------------------------------------------------------------------------------
# Envoy Cluster - Frontend
#---------------------------------------------------------------------------------
  - name: frontend
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    connect_timeout: 10s
    load_assignment:
      cluster_name: frontend
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # eastwestgateway LB - using docker internal dns naming
                address: k3d-cluster1-serverlb
                port_value: 15443
    filters:
    # used for Istio stats information
    - name: istio.metadata_exchange
      typedConfig:
        '@type': type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
        protocol: istio-peer-exchange
    metadata:
      filterMetadata:
        istio:
          default_original_port: 80
          services:
          - host: frontend.simple-app.svc.cluster.local
            name: frontend
            namespace: simple-app
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: outbound_.80_._.frontend.simple-app.svc.cluster.local
        common_tls_context:
          alpnProtocols:
          - istio-peer-exchange
          - istio
          - h2 # enable http2
          tls_certificates:
          - certificate_chain:
              filename: /certs/cert.pem
            private_key:
              filename: /certs/key.pem
          validation_context:
            trusted_ca:
              filename: /certs/ca-cert.pem
    # enable http2 communication
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
